Here we implement our first service layer, Employee Service, which passes off the majority of the work to the EmployeeDAO. However, this service layer is neccesary because it is where the "business logic" of our program will take place. Any custom logic we want to implement will go here, while the actual work of interacting with the database (or EntityManager) will be done in the DAO. It is the service layerâ€™s responsibility to manage transaction boundaries (handling CRUD operations but actually delegating them to DAO)
@Transactional annotations should be in service layer, NOT the DAO layer. According to my research, @Service services no practical purpose other than to denote that this is a service layer class. There is no technical implementation of the @Service tag, it doesn't actually change anything about the class. 
